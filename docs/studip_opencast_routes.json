{
  "swagger": "2.0",
  "info": {
    "description": "JSON Routes for Opencast V3",
    "version": "1.0.0",
    "title": "Opencast V3 Routes",
    "license": {
      "name": "GPL v2",
      "url": "https://www.gnu.org/licenses/old-licenses/gpl-2.0.de.html"
    }
  },
  "host": "demo.studip.de",
  "basePath": "/plugins.php/opencast/api",
  "schemes": [
    "https"
  ],
  "paths": {
    "/users/{user_id}/videos": {
      "parameters": [
        {
          "name": "user_id",
          "in": "path",
          "description": "ID of user to return videos for",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get the videos the passed user has rights on",
        "operationId": "getVideosForUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "type": "integer",
            "description": "The number of items to skip before starting to collect the result set",
            "default": 0,
            "minimum": 0
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "description": "The numbers of items to return",
            "default": 20,
            "minimum": 20
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Video"
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/playlists": {
      "parameters": [
        {
          "name": "user_id",
          "in": "path",
          "description": "ID of user to return playlists for",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get the playlist for the passed user",
        "operationId": "getPlaylistsForUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "type": "integer",
            "description": "The number of items to skip before starting to collect the result set",
            "default": 0,
            "minimum": 0
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "description": "The numbers of items to return",
            "default": 20,
            "minimum": 20
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Playlist"
              }
            }
          }
        }
      }
    },
    "/playlists": {
      "post": {
        "tags": [
          "playlists"
        ],
        "summary": "Add a new playlist for the current user",
        "operationId": "addPlaylistsForUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Playlist object to be added for the current user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Playlist"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/Playlist"
              }
            }
          }
        }
      }
    },
    "/playlists/{playlist_id}": {
      "parameters": [
        {
          "name": "playlist_id",
          "in": "path",
          "description": "ID of the playlist",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "tags": [
          "playlists"
        ],
        "summary": "Get the playlist with the passed id",
        "operationId": "getPlaylistsForId",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/Playlist"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "playlists"
        ],
        "summary": "Update the playlist with the passed id",
        "operationId": "putPlaylistsForId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Playlist object to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Playlist"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/Playlist"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "playlists"
        ],
        "summary": "Delete the playlist with the passed id (if current user has permissions to do so)",
        "operationId": "deletePlaylistsForId",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/playlists/{playlist_id}/video/{video_id}": {
      "parameters": [
        {
          "name": "playlist_id",
          "in": "path",
          "description": "ID of the playlist",
          "required": true,
          "type": "integer"
        },
        {
          "name": "video_id",
          "in": "path",
          "description": "ID of a video",
          "required": true,
          "type": "integer"
        }
      ],
      "put": {
        "tags": [
          "playlists"
        ],
        "summary": "Add video to playlist",
        "operationId": "addVideoToPlaylist",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/Video"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "playlists"
        ],
        "summary": "Delete video from playlist",
        "operationId": "deleteVideoFromPlaylist",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/playlists/{playlist_id}/user/{user_id}": {
      "parameters": [
        {
          "name": "playlist_id",
          "in": "path",
          "description": "ID of the playlist",
          "required": true,
          "type": "integer"
        },
        {
          "name": "user_id",
          "in": "path",
          "description": "ID of a user",
          "required": true,
          "type": "integer"
        }
      ],
      "put": {
        "tags": [
          "playlists"
        ],
        "summary": "Add user with perms to playlist",
        "operationId": "addPermsToPlaylist",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "formData",
            "description": "User to add/modify perms for the playlist",
            "required": true,
            "type": "string"
          },
          {
            "name": "perm",
            "in": "formData",
            "description": "The perm the user shall have",
            "required": true,
            "type": "string",
            "enum": [
              "owner",
              "write",
              "read",
              "share"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "playlists"
        ],
        "summary": "Remove perms for user from playlist",
        "operationId": "removePermsFromPlaylist",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/course/{course_id}/playlists/{playlist_id}": {
      "parameters": [
        {
          "name": "playlist_id",
          "in": "path",
          "description": "ID of the playlist",
          "required": true,
          "type": "integer"
        },
        {
          "name": "course_id",
          "in": "path",
          "description": "ID of a video",
          "required": true,
          "type": "integer"
        }
      ],
      "put": {
        "tags": [
          "courses"
        ],
        "summary": "Add playlist to course",
        "operationId": "addPlaylistToCourse",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/Playlist"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "courses"
        ],
        "summary": "Remove Playlist from course",
        "operationId": "removePlaylistFromCourse",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/videos/{video_id}": {
      "parameters": [
        {
          "name": "video_id",
          "in": "path",
          "description": "ID of the video",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "tags": [
          "videos"
        ],
        "summary": "Get Video for id",
        "operationId": "getVideo",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/Video"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "videos"
        ],
        "summary": "Update Video with ID",
        "operationId": "updateVideo",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Video object to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Video"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/Video"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "videos"
        ],
        "summary": "Remove the video from Stud.IP and from Opencast!",
        "description": "**This operation is used to completely remove a video. It will remove the entry from Stud.IP and retract and delete the event completely in Opencast, so use with care!**",
        "operationId": "deleteVideo",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/Video"
              }
            }
          }
        }
      }
    },
    "/config": {
      "get": {
        "tags": [
          "config"
        ],
        "summary": "Get opencast configuration with all servers",
        "operationId": "getOpencastConfig",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/OpencastConfig"
              },
              "example": [
                {
                  "id": "1",
                  "service_url": "https://opencast.example.com",
                  "service_user": "user",
                  "service_password": "password",
                  "service_version": "11",
                  "settings": {
                    "upload_chunk_size": "5000000",
                    "number_of_configs": "1",
                    "time_buffer_overlap": "60",
                    "ssl_verify_peer": true,
                    "ssl_verify_host": true,
                    "ssl_cipher_list": "none",
                    "lti_consumerkey": "CONSUMERKEY",
                    "lti_consumersecret": "CONSUMERSECRET",
                    "paella": true,
                    "livestream": false,
                    "service_url": "https://opencast.example.com",
                    "service_user": "user",
                    "service_password": "password"
                  },
                  "upload": null,
                  "schedule": null
                },
                {
                  "settings": [
                    {
                      "name": "OPENCAST_TOS",
                      "description": "Terms of service",
                      "value": "",
                      "type": "string"
                    },
                    {
                      "name": "OPENCAST_SHOW_TOS",
                      "description": "Müssen Lehrende einem Datenschutztext zustimmen, bevor sie das Opencast-Plugin in einer Veranstaltung verwenden können?",
                      "value": false,
                      "type": "boolean"
                    },
                    {
                      "name": "OPENCAST_ALLOW_ALTERNATE_SCHEDULE",
                      "description": "Dürfen Lehrende abweichende Aufzeichnungszeiten einstellen?",
                      "value": false,
                      "type": "boolean"
                    },
                    {
                      "name": "OPENCAST_ALLOW_MEDIADOWNLOAD",
                      "description": "Wird Nutzern angeboten, Aufzeichnungen herunterzuladen?",
                      "value": true,
                      "type": "boolean"
                    },
                    {
                      "name": "OPENCAST_ALLOW_STUDIO",
                      "description": "Wird Nutzern angeboten, Aufzeichnungen mit Opencast Studio zu erstellen?",
                      "value": true,
                      "type": "boolean"
                    },
                    {
                      "name": "OPENCAST_HIDE_EPISODES",
                      "description": "Sollen Videos standardmäßig nur für Lehrende sichtbar sein?",
                      "value": false,
                      "type": "boolean"
                    },
                    {
                      "name": "OPENCAST_TUTOR_EPISODE_PERM",
                      "description": "Sollen Tutor/innen im Opencast-Plugin die gleichen Rechte haben wie Dozent/innen?",
                      "value": true,
                      "type": "boolean"
                    }
                  ]
                },
                {
                  "languages": null,
                  "de_DE": {
                    "id": "de_DE",
                    "picture": "lang_de.gif",
                    "name": "Deutsch"
                  }
                }
              ]
            }
          }
        }
      },
      "put": {
        "tags": [
          "config"
        ],
        "summary": "Update global configuration settings",
        "operationId": "updateOpencastConfig",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "settings",
            "in": "formData",
            "description": "User to add/modify perms for the playlist",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    }
  },
  "definitions": {
    "Video": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "opencast_id": {
          "type": "string",
          "description": "The id of the event in Opencast"
        },
        "token": {
          "type": "string",
          "format": "varchar(8)",
          "description": "If not empty, this is the token for videos made accesible via secret link"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "author": {
          "type": "string"
        },
        "contributor": {
          "type": "string"
        },
        "track_link": {
          "type": "string"
        },
        "length": {
          "type": "integer"
        },
        "annotation_tool": {
          "type": "string"
        },
        "downloads": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Download"
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "scheduled",
            "upload",
            "livestream"
          ]
        },
        "mkdate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "id"
      ]
    },
    "Download": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "info": {
          "type": "string"
        },
        "size": {
          "type": "integer"
        }
      }
    },
    "Playlist": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "title": {
          "type": "string",
          "example": "Meine Videos"
        },
        "description": {
          "type": "string"
        },
        "visibility": {
          "type": "string",
          "enum": [
            "internal",
            "free",
            "public"
          ]
        },
        "mkdate": {
          "type": "string",
          "format": "date-time"
        },
        "chdate": {
          "type": "string",
          "format": "date-time"
        },
        "references": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlaylistReference"
          }
        }
      },
      "required": [
        "id",
        "title"
      ]
    },
    "PlaylistReference": {
      "type": "object",
      "properties": {
        "course_id": {
          "type": "string",
          "format": "varchar(32)"
        },
        "visibility": {
          "type": "string",
          "enum": [
            "hidden",
            "visible"
          ]
        }
      }
    },
    "OpencastConfig": {
      "type": "object",
      "properties": {
        "server": {
          "type": "object"
        },
        "settings": {
          "type": "object"
        },
        "languages": {
          "type": "object"
        }
      }
    }
  }
}